@model IEnumerable<WebApplication4.Models.ProjectPeopleAllocations>
@{
    ViewBag.Title = "Index";
    var projects = (List<WebApplication4.Models.Projects>)ViewBag.project;
    var pstatus = (List<WebApplication4.Models.ProjectStatus>)ViewBag.pstatus;
    var staff = (List<WebApplication4.Models.Staff>)ViewBag.staff;
    var students = (List<WebApplication4.Models.Students>)ViewBag.stdt;
    var plans = (List<WebApplication4.Models.Plans>)ViewBag.plans;
    var plansID = ViewBag.plansID;

    using (Ajax.BeginForm("EditStaff", "Allocations", "STID", new AjaxOptions()
    {

        HttpMethod = "post",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "edtText"
    }))
    {
        <input id="STID" name="STID" value="" hidden="hidden" />        
        <input id="EDTsbmt" type="submit" hidden="hidden" />
    }

}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

    <title></title>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript">

    </script>
    <style type="text/css">
        #edtDiv {
            position: fixed;
            border: 1px solid #000;
            top:25%;
            bottom:25%;
            right:30%;
            left:30%;
            background-color:white;
            z-index:999;
        }
        #Edt {
            color: #0c5fc4;
            background-color: #FFFFFF;
            border: 0px none;


            font-size: 15px;
        }
        #LeftTop{
            position:absolute;
            top:10%;
            bottom:75%;
            left:5%;
            right:53%;

        }
        #RightTop1 {
            position: absolute;
            top: 10%;
            bottom: 10%;
            left: 53%;
            right: 20px;
           
        }
        
        #LeftBottom {
            position: absolute;
            top: 27%;
            bottom: 5%;
            left: 5%;
            right: 53%;
            overflow: auto;
           
        }
        #RightBottom {
            position: absolute;
            top: 42%;
            bottom: 5%;
            left: 53%;
            right: 20px;
            margin-top:-10px;
            overflow:auto;
           
        }
        .timeDropDown {
            position: absolute;
        }
        .timeSeletor {
            bottom: 30%;
            top: 30%
        }
        .ddyear {
            right: 55%;
            left: 1px
        }
        .ddsem {
            left: 55%;
            right: 1px
        }
        
        .timebtn {
            right: 10%;
            left: 67%;
        }
        .timediv {
            right: 35%;
            left: 5%;
        }
        .leftTableName {
            min-height: 10px
        }
        #sort {
            
            width: 50%
        }
        .tableHead {
            display: block
        }
        .tableBody {
            position: absolute;
            display: block;
            top: 38px;
            bottom: 0px;
            left: 0px;
            right: 0px;
            overflow-y: scroll;
        }
        .tableTr {
            display: table;
            width: 100%;
            table-layout: fixed;
        }
        .hiddenOnLoad {
            display: none
        }
        .cancelBtn {
            position: absolute;
            width: 10px;
            height: 10px;
            right: 5px;
            top: 5px;
        }
        #edtText {
            position: absolute;
            left: 20%;
            right: 20%;
            top: 15px;
            bottom: 15px;
        }
    </style>
    
</head>
<body>
   
    
    <div id="LeftTop">
        @using (Ajax.BeginForm("ChangeDate", "Allocations", ("ddlyear", "DDLSemester"), new AjaxOptions()
        {

            HttpMethod = "post",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "LeftBottom"
        }))
        {
            <div  class="timeDropDown timeSeletor timediv">

                <div class="timeDropDown ddyear">
                    @Html.DropDownList("ddlyear", null, htmlAttributes: new { @class = "form-control"  ,id = "selectedYear" ,onchange= "sbmt('sbmtSearch'),changeDateStaff()" })
                    @*a drop-down list to show the year, the value was defined in controller*@
                </div>
                <div class="timeDropDown ddsem">
                    @Html.DropDownList("DDLSemester", null, htmlAttributes: new { @class = "form-control", id = "selectedSem" , onchange = "sbmt('sbmtSearch'),changeDateStaff()" })
                    @*a drop-down list to show the semester, the value was defined in controller*@
                </div>


            </div>
            <div class="col-md-4 timeDropDown timeSeletor timebtn">

                <input id="sbmtSearch" type="submit" class="btn btn-primary" value="search" hidden />

            </div>}
    </div>




    <div id="LeftBottom">
        <table class="table table-hover" id="tableExcel">
            <tr>
                <th>
                    Project No.
                </th>
                <th>
                    Project Title
                </th>
                <th>
                    Staff
                </th>
                <th>
                    Students
                </th>
            </tr>
            @foreach (var pjt in projects)
            {
                <tr id="ProjectTable @pjt.projectID"
                    ondrop="ProjectPeopleBind(event,this)"
                    ondragover="dragOver(event)">
                    <td>
                        @Html.DisplayFor(pid => pjt.projectID)
                        @{var prodiff = "difficulty" + pjt.projectID;}
                        <span id="@prodiff">
                            @if (pjt.difficult == "yes")
                            {
                                <span>⭐</span>
                            }
                            @*A star near by the project No. to Mark important items. Note: difficult items are newly added to the database*@
                        </span>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => pjt.projectTitle)
                        <div>

                            <select class="form-control" id="projStatu @pjt.projectID" onchange="selectedStatu(this)">
                                @foreach (var psta in pstatus)
                                {

                                    
                                    if (psta.ProjectStatusId == pjt.projectStatus)
                                    {
                                        <option  selected="selected">@psta.StatusName</option>
                                    }
                                    else
                                    {
                                        <option>@psta.StatusName</option>
                                    }
                                }
                            </select>
                            
                        </div>
                    </td>
                    <td>
                        <div>
                            <div id="divStaff @pjt.projectID"   ondragover="dragOver(event)" data-isDiff=@pjt.difficult class="leftTableName">
                                @*define this tag's id, it will be used in javascript to get this tag*@
                                @{
                                    var staffs = Model.Where(p => p.projectID == pjt.projectID && p.personRole == "staff").ToList();
                                }
                                @foreach (var pstaff in staffs)
                                {
                                   
                                    <div id="@pjt.projectID ProjectTableStaff @pstaff.personID"
                                         data-staffId=@pstaff.personID
                                         data-projId=@pjt.projectID
                                         ondragstart="LeftStaffTableDragStart(event)"
                                         ondragover="dragOver(event)"
                                          draggable="true"
                                         >@staff.FirstOrDefault(a => a.staffID == pstaff.personID).username</div>
                                }
                            </div>
                        </div>
                    </td>
                    <td>
                        <div>
                            <div id="divStudent @pjt.projectID" ondragover="dragOver(event)"  class="leftTableName">

                                @{
                                    var prostudents = Model.Where(p => p.projectID == pjt.projectID && p.personRole == "student").ToList();
                                    @*Looking for a collection of students,*@
                                }
                                @foreach (var pstudent in prostudents)
                                {
                              
                                    <div id="ProjectTableStudent @pstudent.personID"
                                         data-plan=@students.FirstOrDefault(a => a.studentID == pstudent.personID).planId
                                          data-StudprojId=@projects.FirstOrDefault(a => a.projectID == pjt.projectID).projectID
                                         ondragstart="LeftStudentTableDragStart(event,this)"
                                         ondragover="dragOver(event)"
                                        draggable="true"
                                         
                                         >@students.FirstOrDefault(a => a.studentID == pstudent.personID).uniUserName</div>
                                    }
                            </div>
                        </div>
                    </td>
                </tr>
            }

        </table>

    </div>

    <div id="RightTop1">
        <h3>Filter</h3>
        <div class="row">
            <div class="col-md-5">
                @using (Ajax.BeginForm("Change", "Allocations", ("pop", "YearBeSel", "SemBeSel"), new AjaxOptions()
                {

                    HttpMethod = "post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "RightBottom"
                }))
                {
                    <select class="form-control" id="selopt" name="pop" onchange="selectedDate(),sbmt('StudentOrStaff'), hiddenPlanTag('planSelect')">

                        @*studenthidden is a String value, it's default value is ""(no thing), so the select  will default to show students *@
                        @*selpt funcation can to show or hidden the student list and supervisors list*@
                        <option id="selstd" value="student" selected="selected">Students</option>
                        <option id="selstf" value="staff">Supervisors</option>


                    </select>
                    <input id="YearBeSel" name="YearBeSel" value="" hidden="hidden" />
                    <input id="SemBeSel" name="SemBeSel" value="" hidden="hidden" />
                    <input id="StudentOrStaff" type="submit" hidden="hidden" />
                }
                @using (Ajax.BeginForm("Change", "Allocations", ("pop", "YearBeSel", "SemBeSel"), new AjaxOptions()
                {
                        @*this ajax from just use to tell controller to get a refreshed table in right bottom*@
                    HttpMethod = "post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "RightBottom"
                }))
                {
                    <input id="changeToStaffTable" name="pop" value="staff" hidden="hidden" />
                    <input id="YearSel" name="YearBeSel" value="" hidden="hidden" />
                    <input id="SemSel" name="SemBeSel" value="" hidden="hidden" />
                    <input id="changeToStaffTablesbmt" type="submit" hidden="hidden" />
                }
            </div>

            <div class="col-md-5" @ViewBag.studenthidden>
                @*Another function of studenthidden is to keep the options of the original student and supervisor drop-down boxes when submitting the page.*@
                @using (Ajax.BeginForm("SelectPlan", "Allocations", "planSelecter", new AjaxOptions()
                {

                    HttpMethod = "post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "RightBottom"
                }))
                {
                    <select id="planSelect" class=" form-control" name="planSelecter"  onchange="ChangeSortInside(this), sbmt('SelectPlan')">

                        @*the planid's default value is 0, so it will default show "All plans" in this drop down box *@
                        <option label="All Plans" id="AllPlan" value="AllPlan" name="plan" selected="selected">All Plans</option>


                        @foreach (var item in plans)
                        {

                            @*Find the corresponding planid to output its plan name*@
                            <option id="Plan @item.planId" value="@item.planId">@item.planName</option>



                        }

                    </select>

                    <input id="SelectPlan" type="submit" hidden="hidden" />
                }
                @using (Ajax.BeginForm("ChangeSortPlan", "Allocations","SelecedPlan", new AjaxOptions()
                {

                    HttpMethod = "post",
                    InsertionMode = InsertionMode.Replace,
                    //when submit the ajaxform, document will replace "ChangeSortPlan" with a new view (Asynchronous refresh)
                    UpdateTargetId = "sort"
                }))
                {   <input id="SelecedPlan" name="SelecedPlan" value="" hidden="hidden" />
                    
                    <input id="AddPlansbmt" type="submit" hidden="hidden" />
                    }

            </div>
        </div>



        <div id="sortslide" class="row">
            <h3>Sort</h3>
            <div id="sort" class="col-md-5">

                <select id="sortSelecter" class=" form-control" name="SortSelection">
                    <option id="SortName" label="Name" value="name">Name</option>
                    <option id="SortGPA" label="GPA" value="GPA">GPA</option>
            @*the sort selection, if user change plan, the option will change too*@
                </select>
            </div>
            <div class="col-md-5">
                @using (Ajax.BeginForm("OrderByFunc", "Allocations", ("OrderBySort", "OrderByPlanId", "OrderBySortCourseId"), new AjaxOptions()
                {

                    HttpMethod = "post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "RightBottom"
                }))
                {
                    <input id="OrderBySort" name="OrderBySort" value="" hidden="hidden" />
                    <input id="OrderByPlanId" name="OrderByPlanId" value="" hidden="hidden" />
                    <input id="OrderBySortCourseId" name="OrderBySortCourseId" value="" hidden="hidden" />
                    <input id="OrderBySortSbmt" type="submit" hidden="hidden" />
                }
                <button class="btn btn-primary" onclick="OrderBy('P')">ASC</button>
                <button class="btn btn-primary" onclick="OrderBy('N')">DESC</button>
                <input hidden value="P" id="WhichBtnBeClicked"/>
            </div>
            
        </div>
    </div>

    <div id="RightBottom">
        <table class="table table-hover stud"
               ondrop="dropPeopleBack(event)">
            <thead  class="tableHead">
                <tr class="tableTr">
                    <th>Name</th>
                    <th>GPA</th>
                </tr>
            </thead>
            <tbody id="studenttable"
                   class="tableBody"
                   ondragover="dragOver(event)"
                   >
                @foreach (var item in students)
                {
                    if (Model.FirstOrDefault(a => a.personID == item.studentID) == null)

                    {@*make sure the selected student will not be displayed in the student table*@


                    <tr id="stddrag @item.studentID"
                        class="tableTr"
                        draggable="true"
                        ondragover="dragOver(event)"
                        ondragstart="DragStudentsStart(event)">
                        <td>
                            @item.uniUserName
                        </td>
                        <td>
                            @item.gpa

                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
    <div id="edtDiv" class="hiddenOnLoad">
        <input onclick="canceldiv()" class="btn btn-danger cancelBtn" type="button" />
        <div id="edtText" ></div>
    </div>
</body>

</html>
<script>
    function selectedStatu(t) {
        //change the project status
        var projID = t.id.slice(10);
        @*var statusID = $("#" + t.id).find("option:selected").attr("data-statu");*@
        var statusName = t.value;
        console.log(projID + "+" + statusName);
        $.ajax({
            //these are ajax code use to asynchronous refresh this page
            type: "POST",
            //this is the transmission protocol, you can set it with "GET" or "POST","POST" is more secure
            url: "/Allocations/ChangeStatus",
            //using this url to tell the JS which controller and which function will be used 
            data: {
                //this will send some value to controller
                projId: projID,
                statusId: statusName
            },
            success: function (data) {
              //data is from controller, it is a "string"type value,generally used for judgment,
              //however, some time you can use the "data" to do some thing, like get a value from controller
              //Here, we don't need it to do any function. The data storage has been completed in the controller
              //so you can write no thing

            },

        })
    }


    function changeDateStaff() {
        if (document.getElementById("selopt").value == "staff") {
            document.getElementById("YearSel").value = document.getElementById("selectedYear").value;
            document.getElementById("SemSel").value = document.getElementById("selectedSem").value;
            sbmt('changeToStaffTablesbmt');
        }
       //After changing the time, submit the Ajax form to refresh the staff list data asynchronously
            


        
    }

    function selectedDate() {
        //give a value to the AjaxForm(you can search it by id to find them),
        //then, use the value to tell controller what data we need
        document.getElementById("YearBeSel").value = document.getElementById("selectedYear").value;
        document.getElementById("SemBeSel").value = document.getElementById("selectedSem").value;
        @*console.log(document.getElementById("selectedYear").value);*@
    }
    function DragStudentsStart(e) {
        //put the value(information) of the <tr>tag, which will be draged, into script(student)
        e.dataTransfer.setData('Student', e.target.parentElement.id)
        
        e.dataTransfer.setData('StudentTableId', e.target.id);
        e.dataTransfer.setData('StudentId', e.target.id.slice(8));
    }

    function DragStaffStart(e) {
        //put the value(information) of the <tr>tag, which will be draged, into script(staff)
        e.dataTransfer.setData('Staff', e.target.parentElement.id)
        e.dataTransfer.setData('StaffTableId', e.target.id);
        
        e.dataTransfer.setData('StaffId', e.target.id.slice(7));
    }
    function ProjectPeopleBind(e,t) {
        //drag people to project to allocated
        var thisid = t.id.slice(13);
        if (e.dataTransfer.getData("Student") == "studenttable") {
            var studentId = e.dataTransfer.getData("StudentId");
            $.ajax({
                
                type: "POST",
                
                url: "/Allocations/AddStudentToProject",
                data: { studentId: studentId, projectId: thisid },
                success: function (data) {

                    console.log(data);
                    var newdiv = document.createElement("div");
                    
                    newdiv.setAttribute("id", "ProjectTableStudent " + studentId);
                    newdiv.setAttribute("ondragstart", "LeftStudentTableDragStart(event,this)");
                    newdiv.setAttribute("ondragover", "dragOver(event)");
                    newdiv.setAttribute("draggable", "true");
                    newdiv.innerHTML = data;
                    document.getElementById("stddrag " + studentId).remove();
                    //remove draged element, because one student can only work for one project
                    document.getElementById("divStudent " + thisid).appendChild(newdiv);
                    //creat a new <div> when drag student to project

                    
                },

            })
        }
        if (e.dataTransfer.getData("Staff") == "stafftable") {
            var staffID = e.dataTransfer.getData("StaffId");
            $.ajax({
                type: "POST",
                url: "/Allocations/AddStaffToProject",
                data: { staffId: staffID, projectId: thisid },
                success: function (data) {
                    if (data != "Seleced staff is already in this project") {


                        console.log(data);
                        var newdiv = document.createElement("div");
                        
                        newdiv.setAttribute("id", thisid + " ProjectTableStaff " + staffID);
                        newdiv.setAttribute("ondragstart", "LeftStaffTableDragStart(event)");
                        newdiv.setAttribute("ondragover", "dragOver(event)");
                        newdiv.setAttribute("draggable", "true");
                        newdiv.setAttribute("data-staffId", staffID);
                        newdiv.setAttribute("data-projId", thisid);
                        newdiv.innerHTML = data;
                        console.log(newdiv);
                        console.log(newdiv.nodeType);
                        console.log(document.getElementById("divStaff " + thisid).getAttribute("data-isDiff"));
                        document.getElementById("divStaff " + thisid).appendChild(newdiv);
                        var StaffProjectNumber = document.getElementById("pro" + staffID);
                        var StaffDiffProjectNumber = document.getElementById("diff" + staffID);
                        StaffProjectNumber.innerText = parseInt(StaffProjectNumber.innerText) + 1;
                        //just like the previous, this is for staff
                        if (document.getElementById("divStaff " + thisid).getAttribute("data-isDiff") == "yes") {
                            StaffDiffProjectNumber.innerText = parseInt(StaffDiffProjectNumber.innerText) + 1;
                        }
                        //if the project is diffcult, count + 1

                    } else {
                        alert(data);
                    }// if the staff was allocated to this project, alert.

                },

            })
        }
    }

    //================================= Drop People Back Functions ===================================//


@*student*@
    function LeftStudentTableDragStart(e, t) {
        //get the student info
        var thisdrag = document.getElementById(e.target.id).getAttribute("data-plan");
        var planID = $("#planSelect").find("option:selected").attr("id");
        console.log(thisdrag+"is plan id")
        console.log(e.target.parentElement.id);
        console.log(e.target.parentElement.id.slice(11));
        e.dataTransfer.setData('MakeSureStudentOrStaff', "student");
        e.dataTransfer.setData('LeftTableStudentId', e.target.id.slice(20));
        e.dataTransfer.setData('LeftTableRemoveId', e.target.id);
        e.dataTransfer.setData('LeftTableProjId', e.target.parentElement.id.slice(10));
        e.dataTransfer.setData('dataplan', thisdrag);
        console.log(e.target.id);
    }
    @* staff *@
    function LeftStaffTableDragStart(e, t) {
        //get the staff info
        
        var thisstaffId = document.getElementById(e.target.id).getAttribute("data-staffId");
        var thisprojId = document.getElementById(e.target.id).getAttribute("data-projId");
        console.log(thisstaffId + "+" + thisprojId)
        e.dataTransfer.setData('MakeSureStudentOrStaff', "staff");
        e.dataTransfer.setData('LeftTableStaffId', thisstaffId);
        e.dataTransfer.setData('LeftTableProjId', thisprojId);
        e.dataTransfer.setData('LeftTableRemoveId', e.target.id);
    }

    function dropPeopleBack(e) {
        if (e.dataTransfer.getData('MakeSureStudentOrStaff') == "student") {
            //to make sure the draged div is student or staff
            var rmId = e.dataTransfer.getData('LeftTableRemoveId');
            var planID = $("#planSelect").find("option:selected").attr("id");
            var dataplan = e.dataTransfer.getData('dataplan');
            
            $.ajax({
                type: "POST",
                url: "/Allocations/DeleteStudentAllocation",
                data: {
                    personId: e.dataTransfer.getData('LeftTableStudentId'),
                    projectId: e.dataTransfer.getData('LeftTableProjId')
                },
                success: function (data) {
                   @*this data from controller is the PlanId of the student*@
                    
                    document.getElementById(rmId).remove();
                    if (document.getElementById("selopt").value == "student") {
                        if (planID == "AllPlan" || planID.slice(5) == data) {
                            
                            
                            
                            
                            OrderBy(document.getElementById("WhichBtnBeClicked").value);
                            //OrderBy is another JS function to sort student table, I can use that to asynchronous refresh the page 
                            //when we drag student back
                        }
                          
                    }

                },

            })

        }
        if (e.dataTransfer.getData('MakeSureStudentOrStaff') == "staff") {
            var rmId = e.dataTransfer.getData('LeftTableRemoveId');
            var staffID = e.dataTransfer.getData('LeftTableStaffId');
            var ProjId = e.dataTransfer.getData('LeftTableProjId');
            $.ajax({
                type: "POST",
                url: "/Allocations/DeleteStaffAllocation",
                data: {
                    personId: staffID,
                    projectId: ProjId
                },
                success: function (data) {
                    

                    document.getElementById(rmId).remove();
                    if (document.getElementById("selopt").value == "staff") {
                        var StaffProjectNumber = document.getElementById("pro" + staffID);
                        var StaffDiffProjectNumber = document.getElementById("diff" + staffID);
                        StaffProjectNumber.innerText = parseInt(StaffProjectNumber.innerText) - 1;
                        if (document.getElementById("divStaff " + ProjId).getAttribute("data-isDiff") == "yes") {
                            StaffDiffProjectNumber.innerText = parseInt(StaffDiffProjectNumber.innerText) - 1;
                        }
                        //when drag back staff, count - 1
                        }

                    
                 
                    

                },

            })
        }


    }

    





    function dragOver(e) {
        //cancel the default event, if i don't use "e.preventDefault();", the other function maybe not work
        e.preventDefault();
    }
    function ChangeSortInside(t) {
        var Sort = document.getElementById("SelecedPlan");
      
        Sort.value = t.value;
        document.getElementById("AddPlansbmt").click();
    }
    function sbmt(ID) {
        // a funcation to submit the ajax form, this may be used by many place.
        console.log(ID);
        document.getElementById(ID).click();

    }
    function hiddenPlanTag(ID) {
        //this function is used to hidden or show the plan selection.
        var selstf = document.getElementById("selstf");
        var selstd = document.getElementById("selstd");
       
        if (selstf.getAttribute("selected") == "selected") {
            
            $("#sortslide").slideDown();
            selstd.setAttribute("selected", "selected");
            selstf.removeAttribute("selected");
            document.getElementById(ID).style.display = "inline";
        } else {
            selstd.removeAttribute("selected");
            selstf.setAttribute("selected", "selected");
            $("#sortslide").slideUp();

            document.getElementById("AllPlan").selected = true;
            document.getElementById(ID).style.display = "none";
        }

    }
  

    function sbmtEdit(stffid) {
        document.getElementById("STID").value = (stffid);
        sbmt("EDTsbmt");
        //in the begin, this div is empty, I use ajax to add staff information
        document.getElementById("edtDiv").style.display = "initial";
    }

    function canceldiv() {
        //let this div invisible
        document.getElementById("edtDiv").style.display = "none";
    }

    function OrderBy(t) {
        //this is sort function to order student by name, gpa or course grade
        var planID = $("#planSelect").find("option:selected").attr("id");
        document.getElementById("OrderByPlanId").value = planID;
        if (t == 'P') {
            document.getElementById("OrderBySort").value = "Positive";
            document.getElementById("WhichBtnBeClicked").value = "P";
            //here I use a <input> to store which button i just click(asc)
        }
        if (t == 'N') {
            document.getElementById("OrderBySort").value = "Negative";
            document.getElementById("WhichBtnBeClicked").value = "N";
            //here I use a <input> to store which button i just click(desc)
        }

        var CourseID = $("#sortSelecter").find("option:selected").attr("id");
        if (CourseID == "SortName") {
            document.getElementById("OrderBySortCourseId").value = "Name";

        }
        else if (CourseID == "SortGPA") {
            document.getElementById("OrderBySortCourseId").value = "GPA";

        } else {
            document.getElementById("OrderBySortCourseId").value = CourseID;
        }

        document.getElementById("OrderBySortSbmt").click();
        //submit the ajax form
    }

</script>