@model WebApplication4.Models.Projects
@*First use the Projects Model to use the information*@

@{
    ViewBag.Title = "Create";
}

<h2>
    Create Projects
</h2>
<style>
    td {
        padding-block-end: 10px;
    }

    .td1 {
        width: 300px;
        /*text-align-last: right;*/
    }

    .td2 {
        position: absolute;
        right: 700px;
        width: 300px;
        /*text-align-last: right;*/
    }

    .rightside {
        position: absolute;
        padding-block-end: 10px;
        right: 400px;
        width: 280px;
    }
</style>
@*This is the create project page*@
@*In this page we need to input the information of projects and store them in database*@
@using (Html.BeginForm("Create", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table>
            @*The Project Code frame, input the code of the project this will store in the database*@
            <tr>
                <td class="td1">
                    Project Code
                </td>
                <td>
                    @Html.EditorFor(model => model.projectCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectCode, "", new { @class = "text-danger" })
                </td>
                @*The Project Title frame, input the title of the project this will store in the database*@
                <td class="td2">
                    Project Title
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectTitle, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*The Project Scope frame, input the scope of the project this will store in the database*@
            <tr>
                <td class="td1">
                    Project Scope
                </td>
                <td>
                    @Html.EditorFor(model => model.projectScope, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectScope, "", new { @class = "text-danger" })
                </td>
                @*The Project Outcomes frame, input the outcomes of the project this will store in the database*@
                <td class="td2">
                    Project Outcomes
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectOutcomes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectOutcomes, "", new { @class = "text-danger" })
                </td>
            </tr>



            @*The Project Duration frame, input the duration of the project this will store in the database*@
            @*Show time in drop down box, 4 Month or 9 Month*@
            <tr>
                <td class="td1">
                    Project Duration
                </td>
                <td>
                    <select name="projectDuration" class="form-control">
                        <option value="4">4 Month</option>
                        <option value="9">9 Month</option>
                    </select>
                </td>
                @*The Project Placement Requirements frame, input the Placement Requirements of the project this will store in the database*@
                <td class="td2">
                    Project Placement
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectPlacementRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectPlacementRequirements, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*The Project Sponsor Agreement, Tick in the box and we'll store the message in database*@
            <tr>
                <td class="td1">
                    Project Placement Requirements
                </td>
                <td>
                    @Html.EditorFor(model => model.projectPlacementRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectPlacementRequirements, "", new { @class = "text-danger" })
                </td>
                @*Show all the status from model.projectStatus in drop down box for chosen*@
                <td class="td2">
                    Project Status
                </td>
                <td class="rightside">
                    @Html.DropDownList("projectStatus", null, htmlAttributes: new { @class = "form-control" })@*Use the specified list item, read the value from the database, and return the single select element.*@
                    @Html.ValidationMessageFor(model => model.projectStatus, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*The Project Status Comment, input the Status Comment of the project this will store in the database*@
            <tr>
                <td class="td1">
                    Project Status Comment
                </td>
                <td class="td1">
                    @Html.EditorFor(model => model.projectStatusComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectStatusComment, "", new { @class = "text-danger" })
                </td>
                @*The Project Status Change Date, input the Status Change Date of the project this will store in the database*@
                <td class="td2">
                    Project Status Change Date
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectStatusChangeDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectStatusChangeDate, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*Choose the Project Semester in the drop down box, SP2 or SP5*@
            <tr>
                <td class="td1">
                    Project Semester
                </td>
                <td>
                    <select name="projectSemester" class="form-control">
                        <option value="SP2">SP2</option>
                        <option value="SP5">SP5</option>
                    </select>
                </td>
                @*The Project Semester Code, input the Semester Code of the project this will store in the database*@
                <td class="td2">
                    Project Semester Code
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectSemesterCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectSemesterCode, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*Choose the Project Year in the drop down box*@
            <tr>
                <td class="td1">
                    Project Year
                </td>
                <td>
                    <select name="projectYear" class="form-control">
                        @for (var i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 2; i++)
                        {
                            if (i == DateTime.Now.Year)
                            {
                                <option value=@i selected="selected">@i</option>
                            }
                            else
                            {
                                <option value=@i>@i</option>
                            }

                        }
                    </select>
                </td>
                @*The Project Sequence No, input the Sequence No of the project this will store in the database*@
                <td class="td2">
                    Project Sequence Number
                </td>
                <td class="rightside">
                    @Html.EditorFor(model => model.projectSequenceNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectSequenceNo, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*Choose Yes or No in the drop down box for Honours Undergrad*@
            <tr>
                <td class="td1">
                    Honours Undergrad
                </td>
                <td>
                    <select name="honoursUndergrad">
                        <option value="yes">yes</option>
                        <option value="yes">no</option>
                    </select>
                </td>
                @*The Project Requirements Met, Tick in the box and we'll store the information in database*@
                <td class="td2">
                    Requirements Met
                </td>
                <td class="checkbox rightside">
                    @Html.EditorFor(model => model.requirementsMet)
                    @Html.ValidationMessageFor(model => model.requirementsMet, "", new { @class = "text-danger" })
                </td>
            </tr>

            @* User *@
            @*Show the Project Creator ID, we get all the User's ID form the model.projectCreatorID and show it in drop down box*@
            <tr>
                <td class="td1">
                    Project Creator ID
                </td>
                <td>
                    @Html.DropDownList("projectCreatorID", null, htmlAttributes: new { @class = "form-control" })@*Use the specified list item, read the value from the database, and return the single select element.*@
                    @Html.ValidationMessageFor(model => model.projectCreatorID, "", new { @class = "text-danger" })
                </td>
                @*The Aust Citizen Only, Tick in the box and we'll store the information in database*@
                <td class="td2">
                    Aust Citizen Only
                </td>
                <td class="checkbox rightside">
                    @Html.EditorFor(model => model.austCitizenOnly)
                    @Html.ValidationMessageFor(model => model.austCitizenOnly, "", new { @class = "text-danger" })
                </td>
            </tr>

            @*The Project Effort Requirements, input the Effort Requirements of the project this will store in the database*@
            <tr>
                <td class="td1">
                    Project Effort Requirements
                </td>
                <td>
                    @Html.EditorFor(model => model.projectEffortRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectEffortRequirements, "", new { @class = "text-danger" })
                </td>
                @*Choose the Students Req in the drop down box*@
                <td class="td2">
                    Students Req
                </td>
                <td class="rightside">
                    <select name="studentsReq" class="form-control">
                        @*Set a drop-down box with the following options to choose from*@
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.studentsReq, "", new { @class = "text-danger" })
                </td>
            </tr>




            @*Upload file*@
            <tr>
                <td class="td1">
                    <label class="control-label">Staff/Client Files</label>

                </td>
                <td>


                    <input type="file" name="name" value="" />@*Enter a file.*@

                <td class="td2">
                    Difficult
                </td>
                <td class="rightside">
                    <select name="studentsReq" class="form-control">
                        <option value="1">yes</option>
                        <option value="2">no</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td class="td1">
                    <label class="control-label">Additional Files</label>

                </td>
                <td>
                    <input type="file" name="add" multiple value="" />@*Enter a file.*@
                </td>

            </tr>

        </table>
        <div>
            <input type="submit" value="Create" class="btn btn-primary" />
            <br />
        </div>
        <br />
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
