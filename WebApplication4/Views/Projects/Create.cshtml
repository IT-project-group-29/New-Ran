@model WebApplication4.Models.Projects
@*First use the Projects Model to use the information*@

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@*This is the create project page*@
@*In this page we need to input the information of projects and store them in database*@
@using(Html.BeginForm("Create", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Projects</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @*The Project Code frame, input the code of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectCode, "Project Code", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectCode, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Title frame, input the title of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectTitle, "Project Title", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Scope frame, input the scope of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectScope, "Project Scope", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectScope, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectScope, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Outcomes frame, input the outcomes of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectOutcomes, "Project Outcomes", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectOutcomes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectOutcomes, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Duration frame, input the duration of the project this will store in the database*@
    @*Show time in drop down box, 4 Month or 9 Month*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectDuration, "Project Duration", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="projectDuration" class="form-control">
                <option value="4">4 Month</option>
                <option value="9">9 Month</option>
            </select>
        </div>
    </div>

    @*The Project Placement Requirements frame, input the Placement Requirements of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectPlacementRequirements, "Project Placement", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectPlacementRequirements, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectPlacementRequirements, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Sponsor Agreement, Tick in the box and we'll store the message in database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectSponsorAgreement, "Project Sponsor Agreement", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.projectSponsorAgreement, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.projectSponsorAgreement, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*Show all the status from model.projectStatus in drop down box for chosen*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectStatus, "Project Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("projectStatus", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.projectStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Status Comment, input the Status Comment of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectStatusComment, "Project Status Comment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectStatusComment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectStatusComment, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Status Change Date, input the Status Change Date of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectStatusChangeDate, "Project Status Change Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectStatusChangeDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectStatusChangeDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Choose the Project Semester in the drop down box, SP2 or SP5*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectSemester, "Project Semester", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="projectSemester" class="form-control">
                <option value="SP2">SP2</option>
                <option value="SP5">SP5</option>
            </select>

        </div>
    </div>

    @*The Project Semester Code, input the Semester Code of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectSemesterCode, "Project Semester Code", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectSemesterCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectSemesterCode, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Choose the Project Year in the drop down box*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectYear, "Project Year", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="projectYear" class="form-control">
                <option value="2019">2019</option>
                <option value="2020">2020</option>
                <option value="2021">2021</option>
                <option value="2022">2022</option>
                <option value="2023">2023</option>
            </select>
        </div>
    </div>

    @*The Project Sequence No, input the Sequence No of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectSequenceNo, "Project Sequence No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectSequenceNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectSequenceNo, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Choose Yes or No in the drop down box for Honours Undergrad*@
    <div class="form-group">
        @Html.LabelFor(model => model.honoursUndergrad, "Honours Undergrad", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="honoursUndergrad">
                <option value="yes">yes</option>
                <option value="yes">no</option>
            </select>
        </div>
    </div>

    @*The Project Requirements Met, Tick in the box and we'll store the information in database*@
    <div class="form-group">
        @Html.LabelFor(model => model.requirementsMet, "Requirements Met", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.requirementsMet)
                @Html.ValidationMessageFor(model => model.requirementsMet, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @* User *@
    @*Show the Project Creator ID, we get all the User's ID form the model.projectCreatorID and show it in drop down box*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectCreatorID, "Project Creator ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("projectCreatorID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.projectCreatorID, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Project Effort Requirements, input the Effort Requirements of the project this will store in the database*@
    <div class="form-group">
        @Html.LabelFor(model => model.projectEffortRequirements, "Project Effort Requirements", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.projectEffortRequirements, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.projectEffortRequirements, "", new { @class = "text-danger" })
        </div>
    </div>

    @*The Aust Citizen Only, Tick in the box and we'll store the information in database*@
    <div class="form-group">
        @Html.LabelFor(model => model.austCitizenOnly, "Aust Citizen Only", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.austCitizenOnly)
                @Html.ValidationMessageFor(model => model.austCitizenOnly, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*Choose the Students Req in the drop down box*@
    <div class="form-group">
        @Html.LabelFor(model => model.studentsReq, "Students Req", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="studentsReq" class="form-control">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.difficult, "diffcult", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="studentsReq" class="form-control">
                <option value="1">yes</option>
                <option value="2">no</option>
            </select>
        </div>
    </div>

    @*Upload file*@
    <div class="form-group">
        <label class="control-label col-md-2">Staff/Client Files</label>
        <div class="col-md-10">
            <input type="file" name="name" multiple value="" />
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Additional Files</label>
        <div class="col-md-10">
            <input type="file" name="add" value="" /><br />
        </div><br />
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" /><br />
        </div><br />
    </div>
</div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
