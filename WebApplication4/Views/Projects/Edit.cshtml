@model WebApplication4.Models.Projects

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<style>
    td {
        padding-block-end: 10px
    }

    .td1 {
        width: 300px
    }
</style>
@*This page is like Create page, can change the infomation of the project*@
@using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.projectID)

        <div hidden>
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })

            <div>
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <table cellpadding="0">
            <tr>
                <td class="td1">
                    Project Code
                </td>
                <td>
                    @Html.EditorFor(model => model.projectCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectCode, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Title
                </td>
                <td>
                    @Html.EditorFor(model => model.projectTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectTitle, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Scope
                </td>
                <td>
                    @Html.EditorFor(model => model.projectScope, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectScope, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Outcomes
                </td>
                <td>
                    @Html.EditorFor(model => model.projectOutcomes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectOutcomes, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Duration
                </td>
                <td>
                    <select name="projectDuration" class="form-control">
                        @*Check the project duration, the selected is used to show what it is in the drop down box*@
                        @if (Model.projectDuration == 4)
                        {
                            <option value="4" selected>4 Month</option>

                        }
                        else
                        {
                            <option value="4">4 Month</option>
                        }

                        @if (Model.projectDuration == 9)
                        {
                            <option value="9" selected>9 Month</option>

                        }
                        else
                        {
                            <option value="9">9 Month</option>
                        }


                    </select>

                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Placement Requirements
                </td>
                <td>
                    @Html.EditorFor(model => model.projectPlacementRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectPlacementRequirements, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Sponsor Agreement
                </td>
                <td class="checkbox">
                    @Html.CheckBoxFor(model => model.projectSponsorAgreement, new { htmlAttributes = new { @class = "form-control" } })@*Returns the corresponding check box input element for each property in the object represented by the specified expression.*@
                    @Html.ValidationMessageFor(model => model.projectSponsorAgreement, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Status
                </td>
                <td>
                    @Html.DropDownList("projectStatus", null, htmlAttributes: new { @class = "form-control" })@*Use the specified list item, read the value from the database, and return the single select element.*@
                    @Html.ValidationMessageFor(model => model.projectStatus, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Status Comment
                </td>
                <td class="td1">
                    @Html.EditorFor(model => model.projectStatusComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectStatusComment, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Status ChangeDate
                </td>
                <td>
                    @Html.EditorFor(model => model.projectStatusChangeDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectStatusChangeDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Semester
                </td>
                <td>
                    <select name="projectSemester" class="form-control">
                        @*Check the project semester, the selected is used to show what it is in the drop down box*@
                        @if (Model.projectSemester == "SP2")
                        {
                            <option value="SP2" selected>SP2</option>

                        }
                        else
                        {
                            <option value="SP2">SP2</option>
                        }
                        @if (Model.projectSemester == "SP5")
                        {
                            <option value="SP5" selected>SP5</option>

                        }
                        else
                        {
                            <option value="SP5">SP5</option>
                        }


                    </select>
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Semester Code
                </td>
                <td>
                    @Html.EditorFor(model => model.projectSemesterCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectSemesterCode, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Year
                </td>
                <td>

                    <select name="projectYear" class="form-control">
                        @*Check the project year, the selected is used to show what it is in the drop down box*@

                        @for (var i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 2; i++)
                        {
                            if (i == Model.projectYear)
                            {
                                <option value=@i selected="selected">@i</option>
                            }
                            else
                            {
                                <option value=@i>@i</option>
                            }

                        }


                    </select>
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Sequence No
                </td>
                <td>
                    @Html.EditorFor(model => model.projectSequenceNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectSequenceNo, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Honours Undergrad
                </td>
                <td>
                    @*Check the honours undergrad, the selected is used to show what it is in the drop down box*@
                    <select name="honoursUndergrad">
                        @if (Model.honoursUndergrad == "yes")
                        {
                            <option value="yes" selected>YES</option>

                        }
                        else
                        {
                            <option value="yes">YES</option>
                        }

                        @if (Model.honoursUndergrad == "no")
                        {
                            <option value="no" selected>NO</option>

                        }
                        else
                        {
                            <option value="no">NO</option>
                        }

                    </select>

                </td>
            </tr>
            <tr>
                <td class="td1">
                    Requirements Met
                </td>
                <td class="checkbox">
                    @Html.EditorFor(model => model.requirementsMet)
                    @Html.ValidationMessageFor(model => model.requirementsMet, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project CreatorID
                </td>
                <td>
                    @Html.DropDownList("projectCreatorID", null, htmlAttributes: new { @class = "form-control" })@*Use the specified list item, read the value from the database, and return the single select element.*@
                    @Html.ValidationMessageFor(model => model.projectCreatorID, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Project Effort Requirements
                </td>
                <td>
                    @Html.EditorFor(model => model.projectEffortRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectEffortRequirements, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Aust Citizen Only
                </td>
                <td class="checkbox">
                    @Html.EditorFor(model => model.austCitizenOnly)
                    @Html.ValidationMessageFor(model => model.austCitizenOnly, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    Students Req
                </td>
                <td>
                    <select name="studentsReq" class="form-control">
                        @*Set a drop-down box with the following options to choose from*@
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.studentsReq, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="td1">
                    <label >Staff/Client Files</label>

                </td>
                <td>


                    <input type="file" name="name" value="" />@*Enter a file.*@

                </td>
            </tr>
            <tr>
                <td class="td1">
                    <label >Additional Files</label>

                </td>
                <td>


                    <input type="file" name="add" multiple value="" />@*Enter a file.*@


                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Save" class="btn btn-primary" />@*//Define the submit button. The submit button sends the form data to the server.*@
                </td>
            </tr>
        </table>
    </div>
}

<td>
    @Html.ActionLink("Back to List", "Index")@*//Display the text: Back to List of the connection with the controller index of the current page*@
</td>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")@*Output the configuration in the bundleconfig.cs script package, and Bundles are defined in the BundleConfig.cs file.*@
    
}
<script>
    
</script>
