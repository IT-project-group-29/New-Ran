@model WebApplication4.Models.AspNetRoles

@{
    ViewBag.Title = "Create";//add title
}

<h2>Create</h2>


@using (Html.BeginForm()) //Start building a from form
{
    @Html.AntiForgeryToken()//A measure to prevent cross Site Request Forgery (CSRF) attack

    <div class="form-horizontal">
        <h4>AspNetRoles</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @*//Bind the label and set the display format*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @*//Returns the input element corresponding to each attribute in the object represented by an expression, mainly for strong types*@
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @*//Client authentication. That is, verify the validity of the input in jquery.validate.js.*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary " />@*//Define the submit button. The submit button sends the form data to the server.*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")@*//Display the text: Back to List of the connection with the controller index of the current page*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")@*//Output the configuration in the bundleconfig.cs script package*@
}
