@model WebApplication4.Models.ProjectPeopleAllocations

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProjectPeopleAllocations</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.projectID)

        @Html.HiddenFor(model => model.personID)

        @Html.HiddenFor(model => model.personRole)

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.dateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class=" form-group">
            @Html.LabelFor(model => model.Projects.projectTitle, "Project Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="top:7px;">

                @Html.DisplayFor(model => model.Projects.projectTitle, new { @class = "text-danger" })@*Use additional view data to display data of a certain field.*@
            </div>
        </div>


        <div class="form-group" hidden>
            @Html.LabelFor(model => model.creatorID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creatorID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creatorID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class=" form-group">
            @Html.LabelFor(model => model.Projects.dateCreated, "Date Created", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="top:7px;">

                @Html.DisplayFor(model => model.Projects.dateCreated, new { @class = "text-danger" })@*Use additional view data to display data of a certain field.*@
            </div>
        </div>

        <div class=" form-group">
            @Html.LabelFor(model => model.personRole, "Date Created", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="top:7px;">

                @Html.DisplayFor(model => model.personRole, new { @class = "text-danger" })@*Use additional view data to display data of a certain field.*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creatorComment, "Creator Comment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creatorComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creatorComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />@*//Define the submit button. The submit button sends the form data to the server.*@
            </div>

        </div>





        <!-- <div class="form-actions no-color">
             <input type="submit" value="Delete" class="btn btn-danger" />

         </div>-->

    </div>

}
@using (Html.BeginForm())
{


    <div class="form-actions no-color">

        @Html.ActionLink("Delete", "Delete", new { projectID = Model.projectID, personID = Model.personID }, new { @class = "btn btn-primary" })@*//Display the text: Back to List of the connection with the controller index of the current page*@

    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")@*Output the configuration in the bundleconfig.cs script package, and Bundles are defined in the BundleConfig.cs file.*@
}
