@model WebApplication4.Models.PlanCourses

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())@*Mark the response and specify the form submission method.*@
{
    @Html.AntiForgeryToken() @*Generate a hidden form field and prevent CSRF attacks*@

    <div class="form-horizontal">
        <h4>PlanCourses</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })@*Verify the selected field and return to the preset prompt*@
        @Html.HiddenFor(model => model.planId)@*Create hidden fields on the view*@

        @Html.HiddenFor(model => model.courseId)@*Create hidden fields on the view*@

        <div class="form-group">
            @Html.LabelFor(model => model.temp, htmlAttributes: new { @class = "control-label col-md-2" })@*//Bind the label and set the display format*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.temp, new { htmlAttributes = new { @class = "form-control" } })@*//Returns the input element corresponding to each attribute in the object represented by an expression, mainly for strong types*@
                @Html.ValidationMessageFor(model => model.temp, "", new { @class = "text-danger" }) @*Client verification, verifying the validity of the input*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />@*//Define the submit button. The submit button sends the form data to the server.*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")@*//Display the text: Back to List of the connection with the controller index of the current page*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")@*Output the configuration in the bundleconfig.cs script package, and Bundles are defined in the BundleConfig.cs file.*@
}
